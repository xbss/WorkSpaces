<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.xbss.dao.bikeInfo.BikeInfoDao">
 
    <insert id="save" parameterType="com.xbss.entity.bikeInfo.BikeInfo">  
     <![CDATA[   
         insert into  bikeInfo ( bikeId, purchasePlanId, pPBikeBatchId, recyclePlanId, bikeTypeId, bikeTypeName, appearanceInfo, storageId, inStorageTime, outStorageTime, price, state, rentalState, barCode)
         values(#{bikeId}, #{purchasePlanId}, #{pPBikeBatchId}, #{recyclePlanId}, #{bikeTypeId}, #{bikeTypeName}, #{appearanceInfo}, #{storageId}, #{inStorageTime}, #{outStorageTime}, #{price}, #{state}, #{rentalState}, #{barCode})	
     ]]>   
    </insert>
  
    
    <!--  mysql -->
    <insert id="saveEntities"> 
	 	 <![CDATA[  
	    	insert into bikeInfo ( bikeId, purchasePlanId, pPBikeBatchId, recyclePlanId, bikeTypeId, bikeTypeName, appearanceInfo, storageId, inStorageTime, outStorageTime, price, state, rentalState, barCode) VALUES 
	    ]]>  
	    <foreach collection="entities" item="item" index="index" separator=",">   
	         ( #{item.bikeId}, #{item.purchasePlanId}, #{item.pPBikeBatchId}, #{item.recyclePlanId}, #{item.bikeTypeId}, #{item.bikeTypeName}, #{item.appearanceInfo}, #{item.storageId}, #{item.inStorageTime}, #{item.outStorageTime}, #{item.price}, #{item.state}, #{item.rentalState}, #{item.barCode})
	    </foreach> 
	</insert> 
	
	
	<update id="updateByID" >
		<![CDATA[  
			update bikeInfo set 	
      		purchasePlanId = #{entity.purchasePlanId},
      		pPBikeBatchId = #{entity.pPBikeBatchId},
      		recyclePlanId = #{entity.recyclePlanId},
      		bikeTypeId = #{entity.bikeTypeId},
      		bikeTypeName = #{entity.bikeTypeName},
      		appearanceInfo = #{entity.appearanceInfo},
      		storageId = #{entity.storageId},
      		inStorageTime = #{entity.inStorageTime},
      		outStorageTime = #{entity.outStorageTime},
      		price = #{entity.price},
      		state = #{entity.state},
      		rentalState = #{entity.rentalState},
      		barCode = #{entity.barCode}
      	]]>
      	<where>
      		bikeId = #{id}
      	</where>  		
	</update>
		
		
	<update id="updateByCondition">
		<![CDATA[  
			update bikeInfo set 	
      		purchasePlanId = #{entity.purchasePlanId},
      		pPBikeBatchId = #{entity.pPBikeBatchId},
      		recyclePlanId = #{entity.recyclePlanId},
      		bikeTypeId = #{entity.bikeTypeId},
      		bikeTypeName = #{entity.bikeTypeName},
      		appearanceInfo = #{entity.appearanceInfo},
      		storageId = #{entity.storageId},
      		inStorageTime = #{entity.inStorageTime},
      		outStorageTime = #{entity.outStorageTime},
      		price = #{entity.price},
      		state = #{entity.state},
      		rentalState = #{entity.rentalState},
      		barCode = #{entity.barCode}
      	]]>
      	<where>
      		<if test="condition != null">
      			${condition}
      		</if>
      	</where>  		
	</update>	
	
	<update id="updatePropByID">
		<![CDATA[  
			update  bikeInfo set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	bikeId = #{id}
        </where>
	</update>	
	
	<update id="updatePropByCondition">
		<![CDATA[  
			update  bikeInfo set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</update>	
	
   <delete id="deleteByID"  parameterType="string">
		<![CDATA[   
			delete from bikeInfo   
		]]>
		<where>
			bikeId = #{ID}
		</where>
	</delete>	
	
	<delete id="deleteByCondition"  parameterType="string">
		<![CDATA[   
			delete from bikeInfo  
		]]>
		<where>
			<if test="condition != null">
				${condition}
			</if>	
		</where>	
	</delete>	
	
	<delete id="deleteEntities"  parameterType="string">
		<![CDATA[   
			delete from bikeInfo    
		]]>
		<where>
			 bikeId in
			 <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
          		#{item}
        	</foreach>
		</where>	
	</delete>
	
	
	<select id="getByID" resultType="com.xbss.entity.bikeInfo.BikeInfo">
		<![CDATA[   
			select * from bikeInfo 
		]]>
		<where>
			bikeId = #{ID}
		</where>
	</select>
	
	<select id="getByCondition" resultType="com.xbss.entity.bikeInfo.BikeInfo">
		<![CDATA[   
			select * from bikeInfo 
		]]>
		<where>
			<if test="condition != null">
		 		${condition}
		 	</if>
		</where>
	</select>
	
	<select id="findByID" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from bikeInfo 
        <where>
        	bikeId = #{id}
        </where>
	</select>	
	
	
	<select id="findByCondition" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from bikeInfo 
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</select>		
	
		
	<select id="getCountByCondition" resultType="int">
		select count(distinct bikeId) from bikeInfo
		<where>
        	<if test="condition != null">
        		${condition}
        	</if>	
        </where>
	</select>	
</mapper>