<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.xbss.dao.operator.OperatorDao">
 
    <insert id="save" parameterType="com.xbss.entity.operator.Operator">  
     <![CDATA[   
         insert into  operator ( operatorCode, operatorName, sex, age, password, state, level, introduction, storageId)
         values(#{operatorCode}, #{operatorName}, #{sex}, #{age}, #{password}, #{state}, #{level}, #{introduction}, #{storageId})	
     ]]>   
    </insert>
  
    
    <!--  mysql -->
    <insert id="saveEntities"> 
	 	 <![CDATA[  
	    	insert into operator ( operatorCode, operatorName, sex, age, password, state, level, introduction, storageId) VALUES 
	    ]]>  
	    <foreach collection="entities" item="item" index="index" separator=",">   
	         ( #{item.operatorCode}, #{item.operatorName}, #{item.sex}, #{item.age}, #{item.password}, #{item.state}, #{item.level}, #{item.introduction}, #{item.storageId})
	    </foreach> 
	</insert> 
	
	
	<update id="updateByID" >
		<![CDATA[  
			update operator set 	
      		operatorName = #{entity.operatorName},
      		sex = #{entity.sex},
      		age = #{entity.age},
      		password = #{entity.password},
      		state = #{entity.state},
      		level = #{entity.level},
      		introduction = #{entity.introduction},
      		storageId = #{entity.storageId}
      	]]>
      	<where>
      		operatorCode = #{id}
      	</where>  		
	</update>
		
		
	<update id="updateByCondition">
		<![CDATA[  
			update operator set 	
      		operatorName = #{entity.operatorName},
      		sex = #{entity.sex},
      		age = #{entity.age},
      		password = #{entity.password},
      		state = #{entity.state},
      		level = #{entity.level},
      		introduction = #{entity.introduction},
      		storageId = #{entity.storageId}
      	]]>
      	<where>
      		<if test="condition != null">
      			${condition}
      		</if>
      	</where>  		
	</update>	
	
	<update id="updatePropByID">
		<![CDATA[  
			update  operator set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	operatorCode = #{id}
        </where>
	</update>	
	
	<update id="updatePropByCondition">
		<![CDATA[  
			update  operator set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</update>	
	
   <delete id="deleteByID"  parameterType="string">
		<![CDATA[   
			delete from operator   
		]]>
		<where>
			operatorCode = #{ID}
		</where>
	</delete>	
	
	<delete id="deleteByCondition"  parameterType="string">
		<![CDATA[   
			delete from operator  
		]]>
		<where>
			<if test="condition != null">
				${condition}
			</if>	
		</where>	
	</delete>	
	
	<delete id="deleteEntities"  parameterType="string">
		<![CDATA[   
			delete from operator    
		]]>
		<where>
			 operatorCode in
			 <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
          		#{item}
        	</foreach>
		</where>	
	</delete>
	
	
	<select id="getByID" resultType="com.xbss.entity.operator.Operator">
		<![CDATA[   
			select * from operator 
		]]>
		<where>
			operatorCode = #{ID}
		</where>
	</select>
	
	<select id="getByCondition" resultType="com.xbss.entity.operator.Operator">
		<![CDATA[   
			select * from operator 
		]]>
		<where>
			<if test="condition != null">
		 		${condition}
		 	</if>
		</where>
	</select>
	
	<select id="findByID" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from operator 
        <where>
        	operatorCode = #{id}
        </where>
	</select>	
	
	
	<select id="findByCondition" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from operator 
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</select>		
	
		
	<select id="getCountByCondition" resultType="int">
		select count(distinct operatorCode) from operator
		<where>
        	<if test="condition != null">
        		${condition}
        	</if>	
        </where>
	</select>	
</mapper>