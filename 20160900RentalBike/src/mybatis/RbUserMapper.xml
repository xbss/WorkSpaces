<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.xbss.dao.rbUser.RbUserDao">
 
    <insert id="save" parameterType="com.xbss.entity.rbUser.RbUser">  
     <![CDATA[   
         insert into  rbUser ( userId, userName, userKind, userState, mobileNumber, email, password, sex, age, lastLoginTime, signTime)
         values(#{userId}, #{userName}, #{userKind}, #{userState}, #{mobileNumber}, #{email}, #{password}, #{sex}, #{age}, #{lastLoginTime}, #{signTime})	
     ]]>   
    </insert>
  
    
    <!--  mysql -->
    <insert id="saveEntities"> 
	 	 <![CDATA[  
	    	insert into rbUser ( userId, userName, userKind, userState, mobileNumber, email, password, sex, age, lastLoginTime, signTime) VALUES 
	    ]]>  
	    <foreach collection="entities" item="item" index="index" separator=",">   
	         ( #{item.userId}, #{item.userName}, #{item.userKind}, #{item.userState}, #{item.mobileNumber}, #{item.email}, #{item.password}, #{item.sex}, #{item.age}, #{item.lastLoginTime}, #{item.signTime})
	    </foreach> 
	</insert> 
	
	
	<update id="updateByID" >
		<![CDATA[  
			update rbUser set 	
      		userName = #{entity.userName},
      		userKind = #{entity.userKind},
      		userState = #{entity.userState},
      		mobileNumber = #{entity.mobileNumber},
      		email = #{entity.email},
      		password = #{entity.password},
      		sex = #{entity.sex},
      		age = #{entity.age},
      		lastLoginTime = #{entity.lastLoginTime},
      		signTime = #{entity.signTime}
      	]]>
      	<where>
      		userId = #{id}
      	</where>  		
	</update>
		
		
	<update id="updateByCondition">
		<![CDATA[  
			update rbUser set 	
      		userName = #{entity.userName},
      		userKind = #{entity.userKind},
      		userState = #{entity.userState},
      		mobileNumber = #{entity.mobileNumber},
      		email = #{entity.email},
      		password = #{entity.password},
      		sex = #{entity.sex},
      		age = #{entity.age},
      		lastLoginTime = #{entity.lastLoginTime},
      		signTime = #{entity.signTime}
      	]]>
      	<where>
      		<if test="condition != null">
      			${condition}
      		</if>
      	</where>  		
	</update>	
	
	<update id="updatePropByID">
		<![CDATA[  
			update  rbUser set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	userId = #{id}
        </where>
	</update>	
	
	<update id="updatePropByCondition">
		<![CDATA[  
			update  rbUser set
		]]>
		<foreach collection="prop" item="item" index="index" separator=",">
          	${item.key} = #{item.value}
        </foreach>
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</update>	
	
   <delete id="deleteByID"  parameterType="string">
		<![CDATA[   
			delete from rbUser   
		]]>
		<where>
			userId = #{ID}
		</where>
	</delete>	
	
	<delete id="deleteByCondition"  parameterType="string">
		<![CDATA[   
			delete from rbUser  
		]]>
		<where>
			<if test="condition != null">
				${condition}
			</if>	
		</where>	
	</delete>	
	
	<delete id="deleteEntities"  parameterType="string">
		<![CDATA[   
			delete from rbUser    
		]]>
		<where>
			 userId in
			 <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
          		#{item}
        	</foreach>
		</where>	
	</delete>
	
	
	<select id="getByID" resultType="com.xbss.entity.rbUser.RbUser">
		<![CDATA[   
			select * from rbUser 
		]]>
		<where>
			userId = #{ID}
		</where>
	</select>
	
	<select id="getByCondition" resultType="com.xbss.entity.rbUser.RbUser">
		<![CDATA[   
			select * from rbUser 
		]]>
		<where>
			<if test="condition != null">
		 		${condition}
		 	</if>
		</where>
	</select>
	
	<select id="findByID" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from rbUser 
        <where>
        	userId = #{id}
        </where>
	</select>	
	
	
	<select id="findByCondition" resultType="map">
		select 
		<foreach collection="properties" item="item" index="index" separator=",">
          	${item}
        </foreach>
        from rbUser 
        <where>
        	<if test="condition != null">
        		${condition}
        	</if>
        </where>
	</select>		
	
		
	<select id="getCountByCondition" resultType="int">
		select count(distinct userId) from rbUser
		<where>
        	<if test="condition != null">
        		${condition}
        	</if>	
        </where>
	</select>	
</mapper>