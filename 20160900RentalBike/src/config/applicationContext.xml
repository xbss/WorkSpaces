<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans
     	  http://www.springframework.org/schema/beans/spring-beans.xsd
       	  http://www.springframework.org/schema/context 
       	  http://www.springframework.org/schema/context/spring-context.xsd
	      http://www.springframework.org/schema/tx
	      http://www.springframework.org/schema/tx/spring-tx.xsd
		  http://www.springframework.org/schema/jdbc 
		  http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
		  http://www.springframework.org/schema/mvc      
          http://www.springframework.org/schema/mvc/spring-mvc.xsd  
          http://www.springframework.org/schema/aop
	      http://www.springframework.org/schema/aop/spring-aop.xsd
		  ">

	<!-- 启用 spring mvc 注解 -->
	<context:annotation-config />

	<!-- 扫描包-dao层和service层 -->
	<context:component-scan base-package="com.xbss.dao.*;com.xbss.service.*;" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven之前,否则乱码问题同样无法解决 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=utf-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

	<!-- 完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>

	<!-- 注解驱动 -->
	<mvc:annotation-driven />


	<!-- 数据库配置项-mysql -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/rentalbike?Unicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="96333369bu" />
	</bean>
 
	<!-- mybatis- MapperScannerConfigurer -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:*Mapper.xml"  />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean> 
	<!-- 扫描-对应包下的控制器 -->
	<context:component-scan base-package="com.xbss.controller.*"></context:component-scan>

	<!-- 扫描- xml配置文件及Dao接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔com.abc.mapper -->
		<property name="basePackage" value="com.xbss.dao.*" />
	</bean>

	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven />

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- spring mvc返回JSON模版 -->
	<!-- <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean> -->

	<!-- 上传文件解析器 -->
	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean> -->
	
	<!-- 需要加入的bean -->
	<bean id="keyHandler" class="com.xbss.system.complexSearch.KeyHandler"></bean>
    <bean id="classLoader" class="com.xbss.system.classLoader.ClassLoaderTool"></bean>
</beans>